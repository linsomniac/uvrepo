name: Build & Publish Debian Package

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    environment: Main
    runs-on: ubuntu-latest
    env:
      DISTRIBUTION: nobel
      COMPONENT: main
      ARCHITECTURE: amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y reprepro dpkg-dev curl jq gnupg

      - name: Determine latest uv version
        id: get-version
        run: |
          TAG=$(curl -s https://api.github.com/repos/your-org/uv/releases/latest | jq -r '.tag_name')
          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          #GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          KEY_ID=$(gpg --list-keys --with-colons | awk -F: '/^pub/{print $5}')
          echo "Trusting key..."
          echo -e "5\ny\n" | gpg --command-fd 0 --edit-key "$KEY_ID" trust
          echo "$KEY_ID:6:" |  gpg --batch --import-ownertrust

      - name: Download latest uv binary
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/your-org/uv/releases/latest | jq -r '.assets[] | select(.name|test("linux.*amd64")) | .browser_download_url')
          curl -L "$DOWNLOAD_URL" -o uv
          chmod +x uv

      - name: Build Debian package
        run: |
          PKG_VERSION="${{ steps.get-version.outputs.version }}-1"
          PKG="uv_${PKG_VERSION}_${ARCHITECTURE}.deb"
          mkdir -p pkg/DEBIAN pkg/usr/local/bin
          echo "Package: uv" >pkg/DEBIAN/control
          echo "Version: ${PKG_VERSION}" >>pkg/DEBIAN/control
          echo "Section: utils" >>pkg/DEBIAN/control
          echo "Priority: optional" >>pkg/DEBIAN/control
          echo "Architecture: ${ARCHITECTURE}" >>pkg/DEBIAN/control
          echo "Maintainer: GitHub Actions <actions@github.com>" >>pkg/DEBIAN/control
          echo "Description: UV CLI binary" >>pkg/DEBIAN/control
          mv uv pkg/usr/local/bin/uv
          dpkg-deb --build pkg "$PKG"

      - name: Sign Debian package
        run: dpkg-sig --sign builder uv_*.deb

      - name: Create APT repository with reprepro
        run: |
          mkdir -p repo/conf
          echo "Origin: GitHub" >repo/conf/distributions
          echo "Label: GitHub UV" >>repo/conf/distributions
          echo "Suite: stable" >>repo/conf/distributions
          echo "Codename: ${DISTRIBUTION}" >>repo/conf/distributions
          echo "Components: ${COMPONENT}" >>repo/conf/distributions
          echo "Architectures: ${ARCHITECTURE}" >>repo/conf/distributions
          echo "SignWith: yes" >>repo/conf/distributions
          reprepro -Vb repo includedeb ${DISTRIBUTION} "uv_${{ steps.get-version.outputs.version }}-1_${ARCHITECTURE}.deb"

      - name: Deploy APT repository to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
